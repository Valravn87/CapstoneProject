@model CapstoneProject.Models.ViewModels.RestaurantVM

@{
    ViewBag.Title = "Create";
}

<h2>Add New Restaurant</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

	@*<h4>@ViewBag.OwnerName</h4>*@
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	<div class="form-group" id="new-group">
		@Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group" id="old-group">
		@Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownList("GroupId", null, htmlAttributes: new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
		</div>
	</div>

	@*<div class="form-group">
			@Html.LabelFor(model => model.CreateGroup, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="checkbox">
					@Html.EditorFor(model => model.CreateGroup)
					@Html.ValidationMessageFor(model => model.CreateGroup, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>*@

	<div class="form-group">
		@Html.LabelFor(model => model.CreateGroup, htmlAttributes: new { @class = "control-label col-md-2" })
		@Html.EditorFor(model => model.CreateGroup)
		@Html.ValidationMessageFor(model => model.CreateGroup, "", new { @class = "text-danger" })
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.LocationName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.PhoneNum, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.PhoneNum, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Create" class="btn btn-default" /> |
			@Html.ActionLink("Back to Main", "Index")
		</div>
	</div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
	<script>
		if (window.addEventListener) {
			$("#CreateGroup")[0].addEventListener("change", ToggleNew, false);
			window.addEventListener("load", ToggleNew, false);
		} else if (window.attachEvent) {
			$("#CreateGroup")[0].attachEvent("onchange", ToggleNew);
			window.attachEvent("load", ToggleNew);
		}
		function ToggleNew(){
			if ($("#CreateGroup")[0].checked) {
				$("#old-group")[0].style.display = "none";
				$("#new-group")[0].style.display = "block";
			} else {
				$("#new-group")[0].style.display = "none";
				$("#old-group")[0].style.display = "block";
			}
		}
	</script>
}
